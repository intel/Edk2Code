{
  "name": "edk2code",
  "displayName": "Edk2code",
  "description": "EDK2 code support",
  "version": "1.0.7",
  "icon": "assets/icon.png",
  "publisher": "intel-corporation",
  "homepage": "https://github.com/intel/Edk2Code/wiki",
  "repository": {
    "type": "git",
    "url": "https://github.com/intel/Edk2Code"
  },
  "license": "MIT",
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Other",
    "Programming Languages"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "edk2code.openConfigurationUi",
        "title": "EDK2: Workspace configuration (UI)"
        
      },
      {
        "command": "edk2code.openConfigurationJson",
        "title": "EDK2: Workspace configuration (JSON)"
      
      },
      {
        "command": "edk2code.rebuildIndex",
        "title": "EDK2: Rebuild index database"
        
      },
      {
        "command": "edk2code.rescanIndex",
        "title": "EDK2: Rescan Index"
        
      },
      {
        "command": "edk2code.gotoDefinition",
        "title": "EDK2: Go to Definition "
        
      },
      {
        "command": "edk2code.gotoDefinitionInput",
        "title": "EDK2: Go to Definition Input"
        
      },
      {
        "command": "edk2code.openFile",
        "title": "EDK2: Open EDK file"
        
      },
      {
        "command": "edk2code.openLib",
        "title": "EDK2: Open Library"
        
      },
      {
        "command": "edk2code.openModule",
        "title": "EDK2: Open Module "
        
      },
      {
        "command": "edk2code.debugCommand",
        "title": "EDK2: Debug command"
      },
      {
        "command": "edk2code.showLibraryTree",
        "title": "EDK2: Show library tree"
      },
      {
        "command": "edk2code.saveBuildConfiguration",
        "title": "EDK2: Save build configuration file"
      },
      {
        "command": "edk2code.gotoInf",
        "title": "EDK2: Goto Inf"
      },
      {
        "command": "edk2code.references",
        "title": "EDK2: Show Reference tree"
      },
      {
        "command": "edk2code.dscUsage",
        "title": "EDK2: Goto DSC declaration"
      },
      {
        "command": "edk2code.libUsage",
        "title": "EDK2: Show Library usage"
      },
      {
        "command": "edk2code.dscInclusion",
        "title": "EDK2: Goto include"
      },
      {
        "command": "edk2code.showReferences",
        "title": "EDK2: Show references"
      },
      {
        "command": "edk2code.viewWarnings",
        "title": "EDK2: Check for warnings"
      }
    ],
    "configuration": [
      {
        "title": "Edk2Code",
        "properties": {
          "edk2code.logLevel": {
            "order": 1,
            "type": "string",
            "markdownDescription": "Debug log level",
            "default": "None",
            "enum": [
              "None",
              "Error",
              "Warning",
              "Info",
              "Verbose",
              "Debug"
            ]
          },
          "edk2code.generateIgnoreFile": {
            "order": 2,
            "type": "boolean",
            "markdownDescription": "Generate `.ignore` file. This file reduce the scope of files consumed by vscode commands as `search` or `open file`",
            "default": false
          },
          "edk2code.useEdkCallHierarchy": {
            "order": 2,
            "type": "boolean",
            "markdownDescription": "Set this to use EDK2 call hiearchy (cscope) instead of vscode native one. `(reload of vscode after setup)`",
            "default": true
          },
          "edk2code.cscopeOverwritePath": {
            "order": 2,
            "type": "string",
            "markdownDescription": "Overwrites the calls to cscope executable path. `(reload of vscode after setup)`",
            "default": ""
          },
          "edk2code.extraIgnorePatterns": {
            "order": 2,
            "type": "array",
            "markdownDescription": "patterns to append to the `.ignore` file",
            "default": [
              "*.log",
              ".ignore",
              ".gitignore",
              ".edkCode/**/*"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "detailsView",
          "name": "Edk2",
          "type": "tree"
        }
      ]
    },
    "menus": {
      "commandPalette": [
        {
          "command": "edk2code.rebuildIndex",
          "when": "true"
        },
        {
          "command": "edk2code.rescanIndex",
          "when": "true"
        },
        {
          "command": "edk2code.gotoDefinition",
          "when": "edk2code.parseComplete"
        },
        {
          "command": "edk2code.gotoDefinitionInput",
          "when": "edk2code.parseComplete"
        },
        {
          "command": "edk2code.openFile",
          "when": "true"
        },
        {
          "command": "edk2code.openLib",
          "when": "true"
        },
        {
          "command": "edk2code.openModule",
          "when": "true"
        },
        {
          "command": "edk2code.debugCommand"
        },
        {
          "command": "edk2code.showLibraryTree",
          "when": "editorLangId == .inf"
        },
        {
          "command": "edk2code.saveBuildConfiguration",
          "when": "edk2code.parseComplete"
        },
        {
          "command": "edk2code.gotoInf",
          "when": "editorLangId == c"
        },
        {
          "command": "edk2code.references",
          "when": "editorLangId == c || editorLangId == edk2_dsc || editorLangId == edk2_inf || editorLangId == edk2_fdf"
        },
        {
          "command": "edk2code.dscUsage",
          "when": "editorLangId == .inf"
        },
        {
          "command": "edk2code.libUsage",
          "when": "edk2code.parseComplete"
        },
        {
          "command": "edk2code.dscInclusion",
          "when": "editorLangId == edk2_dsc || editorLangId == edk2_fdf"
        },
        {
          "command": "edk2code.showReferences",
          "when": "edk2code.parseComplete"
        },
        {
          "command": "edk2code.viewWarnings",
          "when": "edk2code.parseComplete && (editorLangId == edk2_inf || editorLangId == edk2_dsc)"
        }
      ],
      "editor/title": [],
      "view/title": [],
      "view/item/context": [],
      "editor/context": [
        {
          "command": "edk2code.gotoDefinition",
          "group": "navigation",
          "when": "editorLangId == c"
        },
        {
          "command": "edk2code.showLibraryTree",
          "group": "navigation",
          "when": "editorLangId == edk2_inf"
        },
        {
          "command": "edk2code.gotoInf",
          "group": "navigation",
          "when": "editorLangId == c"
        },
        {
          "command": "edk2code.references",
          "group": "navigation",
          "when": "editorLangId == c || editorLangId == edk2_dsc || editorLangId == edk2_inf || editorLangId == edk2_fdf"
        },
        {
          "command": "edk2code.dscUsage",
          "group": "navigation",
          "when": "editorLangId == edk2_inf"
        },
        {
          "command": "edk2code.libUsage",
          "group": "navigation",
          "when": "editorLangId == edk2_inf && edk2code.parseComplete"
        },
        {
          "command": "edk2code.dscInclusion",
          "group": "navigation",
          "when": "editorLangId == edk2_dsc || editorLangId == edk2_fdf"
        },
        {
          "command": "edk2code.showReferences",
          "group": "navigation",
          "when": "editorLangId == edk2_inf && edk2code.parseComplete"
        }
      ]
    },
    "keybindings": [
      {
        "command": "edk2code.gotoDefinition",
        "key": "ctrl+. g"
      }
    ],
    "languages": [
      {
        "id": "asl",
        "aliases": [
          "ASL",
          "asl"
        ],
        "extensions": [
          ".asl",
          ".asi",
          ".aslc",
          ".i",
          ".ii",
          ".iii",
          ".iiii"
        ],
        "configuration": "./languages/conf/acpi.conf.json"
      },
      {
        "id": "edk2_build_report",
        "aliases": [
          "Edk_buildReport"
        ],
        "extensions": [
          ".log"
        ],
        "configuration": "./languages/conf/edk2_common.conf.json"
      },
      {
        "id": "edk2_dsc",
        "extensions": [
          ".dsc",
          ".dsc.inc"
        ],
        "configuration": "./languages/conf/edk2_common.conf.json"
      },
      {
        "id": "edk2_dec",
        "extensions": [
          ".dec",
          ".dec.inc",
          ".dec.template"
        ],
        "configuration": "./languages/conf/edk2_common.conf.json"
      },
      {
        "id": "edk2_vfr",
        "extensions": [
          ".vfr",
          ".Vfr",
          ".hfr"
        ],
        "configuration": "./languages/conf/edk2_vfr.conf.json"
      },
      {
        "id": "edk2_fdf",
        "extensions": [
          ".fdf",
          ".fdf.inc"
        ],
        "configuration": "./languages/conf/edk2_common.conf.json"
      },
      {
        "id": "edk2_inf",
        "extensions": [
          ".inf"
        ],
        "configuration": "./languages/conf/edk2_common.conf.json"
      },
      {
        "id": "edk2_uni",
        "extensions": [
          ".uni"
        ],
        "configuration": "./languages/conf/edk2_uni.conf.json"
      }
    ],
    "grammars": [
      {
        "language": "asl",
        "scopeName": "source.asl",
        "path": "./languages/syntaxes/asl.tmLanguage.json"
      },
      {
        "language": "edk2_dsc",
        "scopeName": "source.edk2_dsc",
        "path": "./languages/syntaxes/edk2_dsc.tmLanguage.json"
      },
      {
        "language": "edk2_dec",
        "scopeName": "source.edk2_dec",
        "path": "./languages/syntaxes/edk2_dec.tmLanguage.json"
      },
      {
        "language": "edk2_fdf",
        "scopeName": "source.edk2_fdf",
        "path": "./languages/syntaxes/edk2_fdf.tmLanguage.json"
      },
      {
        "language": "edk2_inf",
        "scopeName": "source.edk2_inf",
        "path": "./languages/syntaxes/edk2_inf.tmLanguage.json"
      },
      {
        "language": "edk2_uni",
        "scopeName": "source.edk2_uni",
        "path": "./languages/syntaxes/edk2_uni.tmLanguage.json"
      },
      {
        "language": "edk2_vfr",
        "scopeName": "source.edk2_vfr",
        "path": "./languages/syntaxes/edk2_vfr.tmLanguage.json"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.77.0",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "@vscode/test-electron": "^2.2.3",
    "eslint": "^8.39.0",
    "mocha": "^10.2.0",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "@bendera/vscode-webview-elements": "^0.11.0",
    "@types/glob": "^8.1.0",
    "@vscode/codicons": "0.0.32",
    "fast-glob": "^3.3.2",
    "fastest-levenshtein": "^1.0.16",
    "vscode-ripgrep": "1.13.2"
  }
}
